task varscan2_R1 {

    #Inputs and constants defined here
    String pair_id
    String tumor_id
    String normal_id
    File tumor_mpileup_tar_gz
    File normal_mpileup_tar_gz
    String preemptible_limit
    String output_disk_gb = "500"
    String boot_disk_gb = "50"
    String ram_gb = "3"
    String cpu_cores = "1"
    command {
python_cmd="
import subprocess,os
def run(cmd):
    subprocess.check_call(cmd,shell=True)

run('ln -sT `pwd` /opt/execution')
run('ln -sT `pwd`/../inputs /opt/inputs')
run('/opt/src/algutil/monitor_start.py')

# start task-specific calls
##########################

run('tar xvfz ${normal_mpileup_tar_gz} ')
run('tar xvfz ${tumor_mpileup_tar_gz} ')

run('ls -latrh ')

run('echo  ')
run('wc -l ${normal_id}.pileup1.dat')
run('head ${normal_id}.pileup1.dat')
run('cut -f1-6 ${normal_id}.pileup1.dat > ${normal_id}.pileup1.out')
run('rm ${normal_id}.pileup1.dat')

run('echo  ')
run('wc -l ${tumor_id}.pileup1.dat')
run('head ${tumor_id}.pileup1.dat')
run('cut -f1-6 ${tumor_id}.pileup1.dat > ${tumor_id}.pileup1.out')
run('rm ${tumor_id}.pileup1.dat')

run('echo  ')

run('java -Xmx10g -jar /opt/src/varscan/VarScan.v2.4.3.jar somatic ${normal_id}.pileup1.out ${tumor_id}.pileup1.out ${pair_id}.Varscan --min-coverage 4 --min-var-freq 0.08 --p-value 0.05 --strand-filter 1 --min-avg-qual 20')

#run('java -Xmx10g -jar /opt/src/varscan/VarScan.v2.4.3.jar somatic ${tumor_id}.pileup1.dat ${pair_id}.Varscan --mpileup 1 --min-coverage 4 --min-var-freq 0.08 --p-value 0.05 --strand-filter 1 --min-avg-qual 20')

run('echo  ')


run('grep -v Germline  ${pair_id}.Varscan.snp | grep -v LOH | grep -v Unknown  > ${pair_id}.Varscan.somatic.snp')

run('ls -latrh ')


#########################
# end task-specific calls
run('/opt/src/algutil/monitor_stop.py')
"
        echo "$python_cmd"
        python -c "$python_cmd"

    }

    output {
        File Varscan2_R1_somatic_snp="${pair_id}.Varscan.somatic.snp"
        File Varscan2_R1_snp="${pair_id}.Varscan.snp"
        File Varscan2_R1_indel="${pair_id}.Varscan.indel"
    }

    runtime {
        docker : "docker.io/chipstewart/varscan:1"
        memory: "${ram_gb}GB"
        cpu: "${cpu_cores}"
        disks: "local-disk ${output_disk_gb} HDD"
        bootDiskSizeGb: "${boot_disk_gb}"
        preemptible: "${preemptible_limit}"
    }


    meta {
        author : "Chip Stewart"
        email : "stewart@broadinstitute.org"
    }

}

workflow varscan2_R1_workflow {
    call varscan2_R1
}